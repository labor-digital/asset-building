<%
// This template is based on https://github.com/vladimyr/html-webpack-template/blob/master/test/template.spec.js
/**
The MIT License (MIT)

Copyright (c) 2015 Jake Trent <trent.jake@gmail.com>

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/

const { options } = htmlWebpackPlugin;

const xhtml = options.xhtml;
const lang = options.lang || 'en';
const title = options.title;
const description = options.description;
const mobile = options.mobile;
const headHtmlSnippet = options.headHtmlSnippet;
const unsupportedBrowser = options.unsupportedBrowser;
const bodyHtmlSnippet = options.bodyHtmlSnippet;
const appMountHtmlSnippet = options.appMountHtmlSnippet;
const appMountIds = options.appMountIds || [];
const window = options.window;
const googleAnalytics = options.googleAnalytics;

const isString = arg => typeof arg === 'string';
const toAttributes = obj => {
  return Object.entries(obj)
    .map(([key, value]) => ` ${key}="${value}"`)
    .join('');
}

let appMountId = options.appMountId;
if (appMountIds.length <= 0) appMountId = appMountId || 'app';

const links = (options.links || []).map(link => {
  if (isString(link)) return { href: link, rel: 'stylesheet' };
  return link;
});
const scripts = (options.scripts || []).map(script => {
  if (isString(script)) return { src: script, type: 'text/javascript' };
  return script;
});

%><!DOCTYPE html>
<html lang="<%= lang %>">
<head>
  <meta charset="utf-8">
  <meta content="ie=edge" http-equiv="x-ua-compatible">
  <title><%= title %></title><%
  if (description) { %>
  <meta name="description" content="<%= description %>"><%
  } %><%
  if (mobile) { %>
  <meta content="width=device-width, initial-scale=1" name="viewport"><%
  } %><%
  for (let link of links) { %>
  <link<%= toAttributes(link) %><% if (xhtml) { %>/<% } %>><%
  } %><%
  if (headHtmlSnippet) { %>
  <%= headHtmlSnippet %><%
  } %>
  <%= htmlWebpackPlugin.tags.headTags %>
</head>
<body>
  <%
  if (unsupportedBrowser) { %>
  <style>.unsupported-browser { display: none; }</style>
  <div class="unsupported-browser">
    Sorry, your browser is not supported. Please upgrade to the latest version or switch your browser to use this
    site. See <a href="https://bestvpn.org/outdatedbrowser/" rel="noopener noreferrer">outdatedbrowser.com</a> for options.
  </div><%
  } %><%
  if (bodyHtmlSnippet) { %>
  <%= bodyHtmlSnippet %><%
  } %><%
  if (appMountId) { %>
  <div id="<%= appMountId %>"><% if (appMountHtmlSnippet) { %><%= appMountHtmlSnippet %><% } %></div><%
  } %><%
  for (let appMountId of appMountIds) { %>
  <div id="<%= appMountId %>"></div><%
  } %><%
  if (window) { %>
  <script type="text/javascript"><%
    for (let [key, value] of Object.entries(window)) { %>
    window['<%= key %>'] = <%= JSON.stringify(value) %>;<%
    } %>
  </script><%
  } %><%
  for (let script of scripts) { %>
  <script<%= toAttributes(script) %>></script><%
  } %><%
  if (googleAnalytics) { %>
  <script type="text/javascript">
    window.GoogleAnalyticsObject='ga';window.ga=function(){ga.q.push(arguments);};ga.q=[];ga.l=+new Date;<%
    if (googleAnalytics.trackingId) { %>
    ga('create','<%= googleAnalytics.trackingId %>','auto');<%
    } else { throw new Error('The template requires the googleAnalytics.trackingId config'); } %><%
    if (googleAnalytics.pageViewOnLoad) { %>
    ga('send','pageview');<%
    } %>
  </script>
  <script async defer src="https://www.google-analytics.com/analytics.js" type="text/javascript"></script><%
  } %>
  <%= htmlWebpackPlugin.tags.bodyTags %>
</body>
</html>