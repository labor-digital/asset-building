(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{366:function(e,o,t){"use strict";t.r(o);var i=t(42),s=Object(i.a)({},(function(){var e=this,o=e.$createElement,t=e._self._c||o;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"gulp-migration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gulp-migration"}},[e._v("#")]),e._v(" GULP Migration")]),e._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),t("p",[t("strong",[e._v("This is probably only for LABOR staff, as the gulp file never was open source.")])])]),e._v(" "),t("p",[e._v('To convert your old projects is probably a rather big step, but in most cases, it will be worth it. In contrast to the old "GULP" approach, this package aims to provide a "meta-configuration" which is agnostic to the real implementation of the package generation. So instead of the problems we had with GULP, where we could never\nupdate our sources without a rewrite of our configuration, you can easily update the asset-builder package and use the latest version.')]),e._v(" "),t("p",[e._v("Anyway, before you start to convert your projects, it is highly recommended\nto check out the rest of this documentation, as it will explain a lot by itself.")]),e._v(" "),t("p",[e._v("In addition to that:")]),e._v(" "),t("ul",[t("li",[e._v('When you are converting the "jsConfig":\n'),t("ul",[t("li",[e._v("copy the value "),t("code",[e._v("jsConfig -> baseDir")]),e._v(',\nadd "/application.js" behind it and paste it as '),t("code",[e._v("js -> entry")]),e._v(".")]),e._v(" "),t("li",[e._v("copy the value "),t("code",[e._v("jsConfig -> distDir")]),e._v(' add "bundle.js" behind it\nand paste it as '),t("code",[e._v("js -> output")])]),e._v(" "),t("li",[e._v('When porting from a gulpfile v2.0.8 or higher "jsConfig" will\nbe named "webpackConfig".')]),e._v(" "),t("li",[e._v("When porting from a gulpfile less than v2.0.8 there additional\nchanges will be required, because you need to introduce node-imports,\nas they will no longer be auto-resolved")]),e._v(" "),t("li",[e._v("Make sure you remove no longer needed files, like: first.js, last.js, base.framework.js, base.last.js and jQuery-3.2.1.js")])])]),e._v(" "),t("li",[e._v('When you are converting the "cssConfig":\n'),t("ul",[t("li",[e._v("copy the value "),t("code",[e._v("cssConfig -> baseDir")]),e._v(',\nadd "/application.(sass/less/scss)" behind it and paste it as '),t("code",[e._v("css -> entry")]),e._v(".")]),e._v(" "),t("li",[e._v("copy the value "),t("code",[e._v("cssConfig -> distDir")]),e._v(" add "),t("code",[e._v("cssConfig -> distName")]),e._v(' in addition of ".css"\nbehind it and paste it as '),t("code",[e._v("css -> output")])])])]),e._v(" "),t("li",[e._v('There is no replacement for "fontConfig", you probably want to use "copy" for that now.')]),e._v(" "),t("li",[e._v('To convert "fileCopyConfig":\n'),t("ul",[t("li",[e._v("copy your contents of "),t("code",[e._v("fileCopyConfig -> files")]),e._v(" to "),t("code",[e._v("copy -> from")])]),e._v(" "),t("li",[e._v("copy the contents of "),t("code",[e._v("fileCopyConfig -> distDir")]),e._v(" to "),t("code",[e._v("copy -> to")])]),e._v(" "),t("li",[e._v("Make sure to check the "),t("code",[e._v("copy -> flatten")]),e._v(" option if required.")])])])])])}),[],!1,null,null,null);o.default=s.exports}}]);